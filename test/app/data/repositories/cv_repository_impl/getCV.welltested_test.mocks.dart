// Mocks generated by Mockito 5.4.4 from annotations
// in my_resume/test/app/data/repositories/cv_repository_impl/getCV.welltested_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;
import 'package:my_resume/app/data/datasource/cv/local/local_data_source.dart'
    as _i4;
import 'package:my_resume/app/data/models/cv_model.dart' as _i2;
import 'package:my_resume/app/data/models/cv_subitem.dart' as _i7;
import 'package:my_resume/app/data/models/portfolio.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCVModel_0 extends _i1.SmartFake implements _i2.CVModel {
  _FakeCVModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePortfolio_1 extends _i1.SmartFake implements _i3.Portfolio {
  _FakePortfolio_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$CVModelCopyWith_2<$Res> extends _i1.SmartFake
    implements _i2.$CVModelCopyWith<$Res> {
  _Fake$CVModelCopyWith_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [LocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalDataSource extends _i1.Mock implements _i4.LocalDataSource {
  MockLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.CVModel> getCV() => (super.noSuchMethod(
        Invocation.method(
          #getCV,
          [],
        ),
        returnValue: _i5.Future<_i2.CVModel>.value(_FakeCVModel_0(
          this,
          Invocation.method(
            #getCV,
            [],
          ),
        )),
      ) as _i5.Future<_i2.CVModel>);

  @override
  _i5.Future<_i3.Portfolio> getPortfolio() => (super.noSuchMethod(
        Invocation.method(
          #getPortfolio,
          [],
        ),
        returnValue: _i5.Future<_i3.Portfolio>.value(_FakePortfolio_1(
          this,
          Invocation.method(
            #getPortfolio,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Portfolio>);
}

/// A class which mocks [CVModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockCVModel extends _i1.Mock implements _i2.CVModel {
  MockCVModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get name => (super.noSuchMethod(
        Invocation.getter(#name),
        returnValue: _i6.dummyValue<String>(
          this,
          Invocation.getter(#name),
        ),
      ) as String);

  @override
  String get imagePath => (super.noSuchMethod(
        Invocation.getter(#imagePath),
        returnValue: _i6.dummyValue<String>(
          this,
          Invocation.getter(#imagePath),
        ),
      ) as String);

  @override
  List<_i7.CVSubitem> get contact => (super.noSuchMethod(
        Invocation.getter(#contact),
        returnValue: <_i7.CVSubitem>[],
      ) as List<_i7.CVSubitem>);

  @override
  List<_i7.CVSubitem> get education => (super.noSuchMethod(
        Invocation.getter(#education),
        returnValue: <_i7.CVSubitem>[],
      ) as List<_i7.CVSubitem>);

  @override
  List<_i7.CVSubitem> get certificates => (super.noSuchMethod(
        Invocation.getter(#certificates),
        returnValue: <_i7.CVSubitem>[],
      ) as List<_i7.CVSubitem>);

  @override
  List<_i7.CVSubitem> get skills => (super.noSuchMethod(
        Invocation.getter(#skills),
        returnValue: <_i7.CVSubitem>[],
      ) as List<_i7.CVSubitem>);

  @override
  List<_i7.CVSubitem> get workingExperience => (super.noSuchMethod(
        Invocation.getter(#workingExperience),
        returnValue: <_i7.CVSubitem>[],
      ) as List<_i7.CVSubitem>);

  @override
  List<_i7.CVSubitem> get professionalSummary => (super.noSuchMethod(
        Invocation.getter(#professionalSummary),
        returnValue: <_i7.CVSubitem>[],
      ) as List<_i7.CVSubitem>);

  @override
  _i2.$CVModelCopyWith<_i2.CVModel> get copyWith => (super.noSuchMethod(
        Invocation.getter(#copyWith),
        returnValue: _Fake$CVModelCopyWith_2<_i2.CVModel>(
          this,
          Invocation.getter(#copyWith),
        ),
      ) as _i2.$CVModelCopyWith<_i2.CVModel>);

  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
}
